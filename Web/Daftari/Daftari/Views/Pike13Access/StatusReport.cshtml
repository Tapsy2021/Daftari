@model Daftari.ViewModel.StatusReportVM

@section CustomStyles {
    @Styles.Render("~/Content/datatables")

    <style type="text/css">

        /* For Tablets */
        @@media only screen and (min-device-width: 768px) and (max-device-width: 1024px) {
            .well {
                margin-left: 10px;
                margin-right: 10px;
                padding: 2rem;
                box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
            }
        }

        @@media only screen and (min-device-width: 1024px) {
            .well {
                margin-left: 50px;
                margin-right: 50px;
                margin-top: 15px;
                padding: 1.2rem;
                box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
            }
        }

        .card-title {
            min-height: 33px;
        }

        .card-text {
            font-size: 1.6rem;
            text-align: center;
        }
        .card-title {
            text-align: center;
        }

        .card .bg-light {
            cursor: pointer;
        }
    </style>
}
@{
    ViewBag.Title = "Status Report";
}

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <div class="form-group label-static">
                    <div class="form-group label-static">
                        @Html.Label("Date", htmlAttributes: new { @class = "control-label" })
                        @Html.Editor("Date", new { htmlAttributes = new { @class = "form-control date", data_toggle = "date-picker", data_time_Picker = "true" } })
                        @Html.ValidationMessage("Date", "", new { @class = "text-danger" })
                    </div>
                </div>

                <h5 class="card-title now-title">Today's View</h5>

                <div class="row">
                    <div class="col-md-12">
                        <div class="card bg-light" onclick="test">
                            <div class="card-body">
                                <h5 class="card-title">@Html.DisplayNameFor(model => model.Total_Capacity)</h5>
                                <p class="card-text" id="total-capacity"></p>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-2">
                        <div class="card bg-light">
                            <div class="card-body">
                                <h5 class="card-title">@Html.DisplayNameFor(model => model.Total_Stundents)</h5>
                                <p class="card-text" id="total-students"></p>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-3">
                        <div class="card bg-light">
                            <div class="card-body">
                                <h5 class="card-title">@Html.DisplayNameFor(model => model.Total_Cancelled_Stundents)</h5>
                                <p class="card-text" id="cancelled-students"></p>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-2">
                        <div class="card bg-light">
                            <div class="card-body">
                                <h5 class="card-title">@Html.DisplayNameFor(model => model.Total_No_Show_Stundents)</h5>
                                <p class="card-text" id="no-show-students"></p>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-3">
                        <div class="card bg-light">
                            <div class="card-body">
                                <h5 class="card-title">@Html.DisplayNameFor(model => model.Total_Classes)</h5>
                                <p class="card-text" id="total-classes"></p>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-2">
                        <div class="card bg-light">
                            <div class="card-body">
                                <h5 class="card-title">@Html.DisplayNameFor(model => model.Unpaid_Students)</h5>
                                <p class="card-text" id="unpaid-students"></p>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Start Content-->
                <div class="container-fluid">

                    <div class="row">
                        <div class="col-xl-6">
                            <div class="card">
                                <div class="card-body">
                                    <h4 class="header-title mb-4">Daily Status</h4>
                                    <div id="status-line-chart" class="mt-3 apex-charts" data-colors="#536de6,#10c469,#c41010,#c4a310"></div>
                                </div> <!-- end card body-->
                            </div> <!-- end card -->
                        </div><!-- end col-->

                        <div class="col-xl-6">
                            <div class="card">
                                <div class="card-body">
                                    <h4 class="header-title mb-4">Status Today</h4>
                                    <div id="simple-donut" class="apex-charts" data-colors="#39afd1,#10c469,#c4a310,#c41010"></div>
                                </div> <!-- end card body-->
                            </div> <!-- end card -->
                        </div><!-- end col-->
                    </div>
                    <!-- end row-->

                </div>
                <!-- container -->


            </div> <!-- end card-body-->
        </div>
    </div>
</div>

@section Scripts {
    
    <script>
        var rootURL = '@Url.Action("/")';
    </script>
    <script src="~/Scripts/vendor/Chart.bundle.min.js"></script>
    <script src="~/Scripts/vendor/apexcharts.min.js"></script>
    @*<script src="~/Scripts/vendor/jquery-jvectormap-1.2.2.min.js"></script>
    <script src="~/Scripts/vendor/jquery-jvectormap-world-mill-en.js"></script>*@
    <script src="~/Scripts/controllers/pike13access/status.report.js"></script>

    @*<script src="assets/js/vendor/jquery-jvectormap-1.2.2.min.js"></script>
    <script src="assets/js/vendor/jquery-jvectormap-world-mill-en.js"></script>*@

    @*<script>
            var rootURL = '@Url.Action("/")';
            $(document).ready(function () {

                $.ajax({
                    async: true,
                    type: "GET",
                    cache: false,
                    url: rootURL + "GetReporting"
                }).done(function (data) {

                    var myChart = new Chart(document.getElementById("bar-chart-example"), {
                        type: 'line',
                        //dropShadow: {
                        //    enabled: !0,
                        //    opacity: .2,
                        //    blur: 7,
                        //    left: -7,
                        //    top: 7
                        //},
                        data: {
                            labels: data.Labels,
                            datasets: [{
                        //                            dropShadow: {
                        //    enabled: !0,
                        //    opacity: .2,
                        //    blur: 7,
                        //    left: -7,
                        //    top: 7
                        //},
                                label: "Total Students",
                                data: data.Total_Stundents// [65, 59, 80, 81, 56, 89, 40, 32, 65, 59, 80, 81]
                            }
                                //, {
                                //label: "Total Capacity",
                                //backgroundColor: "#e3eaef",
                                //borderColor: "#e3eaef",
                                //hoverBackgroundColor: "#e3eaef",
                                //hoverBorderColor: "#e3eaef",
                                //data: data.Total_Capacity// [89, 40, 32, 65, 59, 80, 81, 56, 89, 40, 65, 59]
                                //}
                            ]
                        },
                        options: {
                            scales: {
                                yAxes: [{
                                    gridLines: {
                                        display: !1,
                                        color: "rgba(0,0,0,0.05)"
                                    },
                                    stacked: !1,
                                    ticks: {
                                        stepSize: 20
                                    }
                                }],
                                xAxes: [{
                                    barPercentage: .7,
                                    categoryPercentage: .5,
                                    stacked: !1,
                                    gridLines: {
                                        color: "rgba(0,0,0,0.01)"
                                    }
                                }]
                            }
                        }
                    });

                    ////var ctx = document.getElementById("bar-chart-example");
                    ////var r = ctx.getContext("2d").createLinearGradient(0, 500, 0, 150);//.addColorStop(0, n[0]);
                    //var myChart = new Chart(document.getElementById("bar-chart-example"), {
                    //    type: 'bar',
                    //    data: {
                    //        labels: data.Labels,// ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                    //        datasets: [{
                    //            label: "Total Students",
                    //            //backgroundColor: r,
                    //            //borderColor: r,
                    //            //hoverBackgroundColor: r,
                    //            //hoverBorderColor: r,
                    //            data: data.Total_Stundents// [65, 59, 80, 81, 56, 89, 40, 32, 65, 59, 80, 81]
                    //        }, {
                    //            label: "Total Capacity",
                    //            backgroundColor: "#e3eaef",
                    //            borderColor: "#e3eaef",
                    //            hoverBackgroundColor: "#e3eaef",
                    //            hoverBorderColor: "#e3eaef",
                    //            data: data.Total_Capacity// [89, 40, 32, 65, 59, 80, 81, 56, 89, 40, 65, 59]
                    //        }]
                    //    },
                    //    options: {
                    //        scales: {
                    //            yAxes: [{
                    //                gridLines: {
                    //                    display: !1,
                    //                    color: "rgba(0,0,0,0.05)"
                    //                },
                    //                stacked: !1,
                    //                ticks: {
                    //                    stepSize: 20
                    //                }
                    //            }],
                    //            xAxes: [{
                    //                barPercentage: .7,
                    //                categoryPercentage: .5,
                    //                stacked: !1,
                    //                gridLines: {
                    //                    color: "rgba(0,0,0,0.01)"
                    //                }
                    //            }]
                    //        }
                    //    }
                    //});

                    //var ctx2 = document.getElementById("bar-chart-example2");
                    //var r = ctx.getContext("2d").createLinearGradient(0, 500, 0, 150);//.addColorStop(0, n[0]);
                    var myChart2 = new Chart(document.getElementById("bar-chart-example2"), {
                        type: 'bar',
                        data: {
                            labels: data.Labels,// ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                            datasets: [{
                                label: "Total Students",
                                //backgroundColor: r,
                                //borderColor: r,
                                //hoverBackgroundColor: r,
                                //hoverBorderColor: r,
                                data: data.Total_Stundents// [65, 59, 80, 81, 56, 89, 40, 32, 65, 59, 80, 81]
                            }, {
                                label: "Total Cancelled",
                                backgroundColor: "#e3eaef",
                                borderColor: "#e3eaef",
                                hoverBackgroundColor: "#e3eaef",
                                hoverBorderColor: "#e3eaef",
                                data: data.Total_Cancelled_Stundents// [89, 40, 32, 65, 59, 80, 81, 56, 89, 40, 65, 59]
                            }]
                        },
                        options: {
                            scales: {
                                yAxes: [{
                                    gridLines: {
                                        display: !1,
                                        color: "rgba(0,0,0,0.05)"
                                    },
                                    stacked: !1,
                                    ticks: {
                                        stepSize: 20
                                    }
                                }],
                                xAxes: [{
                                    barPercentage: .7,
                                    categoryPercentage: .5,
                                    stacked: !1,
                                    gridLines: {
                                        color: "rgba(0,0,0,0.01)"
                                    }
                                }]
                            }
                        }
                    });

                    new Chart(document.getElementById("bar-chart-example3"), {
                        type: 'bar',
                        data: {
                            labels: data.Labels,// ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                            datasets: [{
                                label: "Total Students",
                                //backgroundColor: r,
                                //borderColor: r,
                                //hoverBackgroundColor: r,
                                //hoverBorderColor: r,
                                data: data.Total_Stundents// [65, 59, 80, 81, 56, 89, 40, 32, 65, 59, 80, 81]
                            }, {
                                label: "Total No Show",
                                backgroundColor: "#e3eaef",
                                borderColor: "#e3eaef",
                                hoverBackgroundColor: "#e3eaef",
                                hoverBorderColor: "#e3eaef",
                                data: data.Total_No_Show_Stundents// [89, 40, 32, 65, 59, 80, 81, 56, 89, 40, 65, 59]
                            }]
                        },
                        options: {
                            scales: {
                                yAxes: [{
                                    gridLines: {
                                        display: !1,
                                        color: "rgba(0,0,0,0.05)"
                                    },
                                    stacked: !1,
                                    ticks: {
                                        stepSize: 20
                                    }
                                }],
                                xAxes: [{
                                    barPercentage: .7,
                                    categoryPercentage: .5,
                                    stacked: !1,
                                    gridLines: {
                                        color: "rgba(0,0,0,0.01)"
                                    }
                                }]
                            }
                        }
                    });








                });



                //var ctx = document.getElementById("bar-chart-example");
                ////var r = ctx.getContext("2d").createLinearGradient(0, 500, 0, 150);//.addColorStop(0, n[0]);
                //var myChart = new Chart(ctx, {
                //    type: 'bar',
                //    data: {
                //        labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                //        datasets: [{
                //            label: "Sales Analytics",
                //            //backgroundColor: r,
                //            //borderColor: r,
                //            //hoverBackgroundColor: r,
                //            //hoverBorderColor: r,
                //            data: [65, 59, 80, 81, 56, 89, 40, 32, 65, 59, 80, 81]
                //        }, {
                //            label: "Dollar Rate",
                //            backgroundColor: "#e3eaef",
                //            borderColor: "#e3eaef",
                //            hoverBackgroundColor: "#e3eaef",
                //            hoverBorderColor: "#e3eaef",
                //            data: [89, 40, 32, 65, 59, 80, 81, 56, 89, 40, 65, 59]
                //        }]
                //    },

                //    options: {
                //        scales: {
                //            yAxes: [{
                //                gridLines: {
                //                    display: !1,
                //                    color: "rgba(0,0,0,0.05)"
                //                },
                //                stacked: !1,
                //                ticks: {
                //                    stepSize: 20
                //                }
                //            }],
                //            xAxes: [{
                //                barPercentage: .7,
                //                categoryPercentage: .5,
                //                stacked: !1,
                //                gridLines: {
                //                    color: "rgba(0,0,0,0.01)"
                //                }
                //            }]
                //        }
                //    }
                //});



            });
        </script>*@















    @*<script src="~/Scripts/pages/demo.chartjs.js"></script>*@
    @*<script>
            function hexToRGB(a, r) {
                var t = parseInt(a.slice(1, 3), 16)
                  , e = parseInt(a.slice(3, 5), 16)
                  , o = parseInt(a.slice(5, 7), 16);
                return r ? "rgba(" + t + ", " + e + ", " + o + ", " + r + ")" : "rgb(" + t + ", " + e + ", " + o + ")"
            }
            !function(d) {
                "use strict";
                function a() {
                    this.$body = d("body"),
                    this.charts = []
                }

                a.prototype.respChart = function (r, t, e, o) {

                    var n = Chart.controllers.line.prototype.draw;
                    Chart.controllers.line.prototype.draw = function() {
                        n.apply(this, arguments);

                        var a = this.chart.chart.ctx, r = a.stroke;

                        a.stroke = function() {
                            a.save(),
                            a.shadowColor = "rgba(0,0,0,0.01)",
                            a.shadowBlur = 20,
                            a.shadowOffsetX = 0,
                            a.shadowOffsetY = 5,
                            r.apply(this, arguments),
                            a.restore()
                        }
                    };


                    var s = Chart.controllers.doughnut.prototype.draw;
                    Chart.controllers.doughnut = Chart.controllers.doughnut.extend({
                        draw: function() {
                            s.apply(this, arguments);

                            var a = this.chart.chart.ctx, r = a.fill;

                            a.fill = function() {
                                a.save(),
                                a.shadowColor = "rgba(0,0,0,0.03)",
                                a.shadowBlur = 4,
                                a.shadowOffsetX = 0,
                                a.shadowOffsetY = 3,
                                r.apply(this, arguments),
                                a.restore()
                            }
                        }
                    });


                    var l = Chart.controllers.bar.prototype.draw;
                    Chart.controllers.bar = Chart.controllers.bar.extend({
                        draw: function() {
                            l.apply(this, arguments);

                            var a = this.chart.chart.ctx, r = a.fill;

                            a.fill = function() {
                                a.save(),
                                a.shadowColor = "rgba(0,0,0,0.01)",
                                a.shadowBlur = 20,
                                a.shadowOffsetX = 4,
                                a.shadowOffsetY = 5,
                                r.apply(this, arguments),
                                a.restore()
                            }
                        }
                    }),
                    Chart.defaults.global.defaultFontColor = "#8391a2",
                    Chart.defaults.scale.gridLines.color = "#8391a2";


                    var i = r.get(0).getContext("2d"), c = d(r).parent();

                    return function() {
                        var a;
                        switch (r.attr("width", d(c).width()), t) {
                            case "Line":
                                a = new Chart(i,{
                                    type: "line",
                                    data: e,
                                    options: o
                                });
                                break;
                            case "Doughnut":
                                a = new Chart(i,{
                                    type: "doughnut",
                                    data: e,
                                    options: o
                                });
                                break;
                            case "Pie":
                                a = new Chart(i,{
                                    type: "pie",
                                    data: e,
                                    options: o
                                });
                                break;
                            case "Bar":
                                a = new Chart(i,{
                                    type: "bar",
                                    data: e,
                                    options: o
                                });
                                break;
                            case "Radar":
                                a = new Chart(i,{
                                    type: "radar",
                                    data: e,
                                    options: o
                                });
                                break;
                            case "PolarArea":
                                a = new Chart(i,{
                                    data: e,
                                    type: "polarArea",
                                    options: o
                                })
                            }
                        return a
                    }()
                },

                a.prototype.initCharts = function() {
                    var a, r, t, e, o, n, s, l = [], i = ["#727cf5", "#0acf97", "#fa5c7c", "#ffbc00"];

                    return 0 < d("#line-chart-example").length && (a = {
                        labels: ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"],
                        datasets: [{
                            label: "Current Week",
                            backgroundColor: hexToRGB((n = (o = d("#line-chart-example").data("colors")) ? o.split(",") : i.concat())[0], .3),
                            borderColor: n[0],
                            data: [32, 42, 42, 62, 52, 75, 62]
                        }, {
                            label: "Previous Week",
                            fill: !0,
                            backgroundColor: "transparent",
                            borderColor: n[1],
                            borderDash: [5, 5],
                            data: [42, 58, 66, 93, 82, 105, 92]
                        }]
                    },

                    l.push(this.respChart(d("#line-chart-example"), "Line", a, {
                        maintainAspectRatio: !1,
                        legend: {
                            display: !1
                        },
                        tooltips: {
                            intersect: !1
                        },
                        hover: {
                            intersect: !0
                        },
                        plugins: {
                            filler: {
                                propagate: !1
                            }
                        },
                        scales: {
                            xAxes: [{
                                reverse: !0,
                                gridLines: {
                                    color: "rgba(0,0,0,0.05)"
                                }
                            }],
                            yAxes: [{
                                ticks: {
                                    stepSize: 20
                                },
                                display: !0,
                                borderDash: [5, 5],
                                gridLines: {
                                    color: "rgba(0,0,0,0)",
                                    fontColor: "#fff"
                                }
                            }]
                        }
                    }))),


                    0 < d("#bar-chart-example").length && (n = (o = d("#bar-chart-example").data("colors")) ? o.split(",") : i.concat(),
                    (r = document.getElementById("bar-chart-example").getContext("2d").createLinearGradient(0, 500, 0, 150)).addColorStop(0, n[0]),
                    r.addColorStop(1, n[1]),
                    t = {
                        labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                        datasets: [{
                            label: "Sales Analytics",
                            backgroundColor: r,
                            borderColor: r,
                            hoverBackgroundColor: r,
                            hoverBorderColor: r,
                            data: [65, 59, 80, 81, 56, 89, 40, 32, 65, 59, 80, 81]
                        }, {
                            label: "Dollar Rate",
                            backgroundColor: "#e3eaef",
                            borderColor: "#e3eaef",
                            hoverBackgroundColor: "#e3eaef",
                            hoverBorderColor: "#e3eaef",
                            data: [89, 40, 32, 65, 59, 80, 81, 56, 89, 40, 65, 59]
                        }]
                    },

                    l.push(this.respChart(d("#bar-chart-example"), "Bar", t, {
                        maintainAspectRatio: !1,
                        legend: {
                            display: !1
                        },
                        scales: {
                            yAxes: [{
                                gridLines: {
                                    display: !1,
                                    color: "rgba(0,0,0,0.05)"
                                },
                                stacked: !1,
                                ticks: {
                                    stepSize: 20
                                }
                            }],
                            xAxes: [{
                                barPercentage: .7,
                                categoryPercentage: .5,
                                stacked: !1,
                                gridLines: {
                                    color: "rgba(0,0,0,0.01)"
                                }
                            }]
                        }
                    }))),


                    0 < d("#donut-chart-example").length && (e = {
                        labels: ["Direct", "Affilliate", "Sponsored", "E-mail"],
                        datasets: [{
                            data: [300, 135, 48, 154],
                            backgroundColor: n = (o = d("#donut-chart-example").data("colors")) ? o.split(",") : i.concat(),
                            borderColor: "transparent",
                            borderWidth: "3"
                        }]
                    },
                    l.push(this.respChart(d("#donut-chart-example"), "Doughnut", e, {
                        maintainAspectRatio: !1,
                        cutoutPercentage: 60,
                        legend: {
                            display: !1
                        }
                    }))),
                    l
                },

                a.prototype.init = function() {
                    var r = this;
                    Chart.defaults.global.defaultFontFamily = '-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,"Helvetica Neue",sans-serif',
                    r.charts = this.initCharts(),
                    d(window).on("resize", function(a) {
                        d.each(r.charts, function(a, r) {
                            try {
                                r.destroy()
                            } catch (a) {}
                        }),
                        r.charts = r.initCharts()
                    })
                },

                d.ChartJs = new a,
                d.ChartJs.Constructor = a
            }(window.jQuery),
            function() {
                "use strict";
                window.jQuery.ChartJs.init()
            }();

        </script>*@
}