@model Daftari.ViewModel.CustomerSMSVM
@section CustomStyles {

    <style>
        body > #standalone-container {
            margin: 50px auto;
            max-width: 720px;
        }

        #editor-container {
            height: 350px;
        }
    </style>
}
@{
    ViewBag.Title = "Send Message to a Customer";
}

<h2>Send SMS to Customers</h2>

@if (ViewBag.ErrorMessage != null)
{
    <div class="alert alert-warning fade in">
        <a href="#" class="close" data-dismiss="alert">&times;</a>
        <strong>Warning!</strong> @ViewBag.ErrorMessage
    </div>
}

@using (Html.BeginForm("SendCustomerSMS", "Communication", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal well">
        <h4>Aqua-Tots Communications Console</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group label-floating">
            @Html.LabelFor(model => model.SMSAPI, htmlAttributes: new { @class = "control-label" })<br />
            @Html.EnumDropDownListFor(model => model.SMSAPI, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SMSAPI, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Customers, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <span class="selectall btn btn-xs btn-light">Select all</span>
                <span class="deselect btn btn-xs btn-danger">Deselect all</span>
                @Html.DropDownList("Customers", null, htmlAttributes: new { @class = "form-control select2", @multiple = "multiple", data_toggle = "select2" })
                @Html.ValidationMessageFor(model => model.Customers, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Message, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Message, new { htmlAttributes = new { @class = "form-control", data_toggle = "maxlength", maxlength = "480", data_threshold = "160" } })
                @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Language, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Language, htmlAttributes: new { @class = "form-control chosen-select" })
                @Html.ValidationMessageFor(model => model.Language, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Send" class="btn btn-light" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")

    <script>

        $('.selectall').click(function () {
            $('#Customers').select2('destroy').find('option').prop('selected', 'selected').end().select2();
        });

        $('.deselect').click(function () {
            $('#Customers').select2('destroy').find('option').prop('selected', false).end().select2();
        });
    </script>
}